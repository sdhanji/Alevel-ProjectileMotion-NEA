<Window x:Class="Projectile_World.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Projectile_World"
        mc:Ignorable="d"
        Title="MainWindow" Height="830" Width="1600">
    <Grid>

        <!--creates simulation canvas-->
        <Canvas x:Name="projectileCanvas" Background="Azure" Visibility="Visible" Margin="-2,0,2,0">



            <!--angle functionality:
                    slider for user 
                    label displays angle
                    (in/de)crement buttons change angle by +/- 1-->
            <Slider x:Name="angleSlider" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Left="40" Canvas.Top="610" Width="130" Value="45" Minimum="0" Maximum="90" SmallChange="1" IsSnapToTickEnabled="True" ValueChanged="angleSlider_ValueChanged" />
            <Label x:Name="angleLabel" Content="Angle from Horizontal = 45" Canvas.Left="28" Canvas.Top="627" Width="168"/>
            <Button x:Name="decrementAngle" Content="-" Canvas.Left="20" Canvas.Top="610" Width="20" Click="decrementAngle_Click"/>
            <Button x:Name="incrementAngle" Content="+" Canvas.Left="170" Canvas.Top="610" Width="20" Click="incrementAngle_Click" />

            <!--actual speed functionality:
                    slider for user 
                    label displays actual speed
                    (in/de)crement buttons change actual speed by +/- 1-->
            <Slider x:Name="actualSpeedSlider" Value ="0" Minimum="0" Maximum="30" SmallChange="1" IsSnapToTickEnabled="True" Canvas.Left="253" Canvas.Top="612" Width="130" ValueChanged="actualSpeedSlider_ValueChanged"/>
            <Label x:Name="actualSpeedLabel" Content="Actual Speed = 0" Canvas.Left="277" Canvas.Top="626" Height="27"/>
            <Button x:Name="incrementActualSpeed" Content="+" Canvas.Left="383" Canvas.Top="610" Width="20" Click="incrementActualSpeed_Click"/>
            <Button x:Name="decrementActualSpeed" Content="-" Canvas.Left="228" Canvas.Top="610" Width="20" Click="decrementActualSpeed_Click"/>



            <!--Y Vector functionality:
                    slider for user 
                    label displays Y Vector
                    (in/de)crement buttons change Y Vector by +/- 1-->
            <Slider x:Name="YVectorSlider" Value ="1" Minimum="0" Maximum="30" SmallChange="1" IsSnapToTickEnabled="True" Canvas.Left="253" Canvas.Top="612" Width="130" ValueChanged="YVectorSlider_ValueChanged" Visibility="Hidden"/>
            <Label x:Name="YVectorLabel" Content="Y Vector = 1" Canvas.Left="277" Canvas.Top="626" Visibility="Hidden"/>
            <Button x:Name="incrementYVector" Content="+" Canvas.Left="383" Canvas.Top="610" Width="20" Click="incrementYVector_Click" Visibility="Hidden"/>
            <Button x:Name="decrementYVector" Content="-" Canvas.Left="228" Canvas.Top="610" Width="20" Click="decrementYVector_Click" Visibility="Hidden"/>



            <!--X Vector functionality:
                    slider for user 
                    label displays X Vector
                    (in/de)crement buttons change X Vector by +/- 1-->
            <Slider x:Name="XVectorSlider" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Left="40" Canvas.Top="610" Width="130" Value="1" Minimum="0" Maximum="30" SmallChange="1" IsSnapToTickEnabled="True" ValueChanged="XVectorSlider_ValueChanged" Visibility="Hidden"/>
            <Label x:Name="XVectorLabel" Content="X Vector = 1" Canvas.Left="28" Canvas.Top="627" Width="168" Visibility="Hidden"/>
            <Button x:Name="incrementXVector" Content="+" Canvas.Left="170" Canvas.Top="610" Width="20" Click="incrementXVector_Click" Visibility="Hidden"/>
            <Button x:Name="decrementXVector" Content="-" Canvas.Left="20" Canvas.Top="610" Width="20" Click="decrementXVector_Click" Visibility="Hidden"/>




            <!--gravity functionality:
                    slider for user 
                    label displays gravity
                    (in/de)crement buttons change gravity by +/- 1
                    resets gravity to Earth value (9.81)-->
            <Slider x:Name="GravitySlider" Value="9.8" Minimum="1" Maximum="20" LargeChange="0.01" Canvas.Left="35" Canvas.Top="658" Height="19" Width="212" ValueChanged="GravitySlider_ValueChanged"/>
            <Label x:Name="GravityLabel" Content="Gravity = 9.8" Canvas.Left="40" Canvas.Top="673" Height="26" Width="115"/>
            <Button x:Name="incrementGravity" Content="+" Canvas.Left="252" Canvas.Top="659" Width="20" Click="incrementGravity_Click" />
            <Button x:Name="decrementGravity" Content="-" Canvas.Left="15" Canvas.Top="658" Width="20" Click="decrementGravity_Click" />
            <Button x:Name="resetGravity" Content="Reset" Canvas.Left="172" Canvas.Top="676" Width="75" Click="resetGravity_Click"/>



            <Button x:Name="polarVectorConvert" Content="Vector" Canvas.Left="317" Canvas.Top="663" Width="76" Click="polarVectorConvert_Click"/> <!--convert from polar to vector-->
            <Button x:Name="fireProjectile" Content="FIRE" FontSize="40" Canvas.Left="423" Canvas.Top="606" Width="82" Height="64" Click="fireProjectile_Click"/> <!--button to fire projectile-->
            <Button x:Name="pausePlayButton" Content="pause" Canvas.Left="506" Canvas.Top="647" Width="54" Height="23" Click="pausePlayButton_Click"/> <!--pauses/plays projectile mid-flight-->
            
            <!--displays time of flight-->
            <Label Content="Time: " Canvas.Left="510" Canvas.Top="600" Height="25" Width="88" />
            <Label x:Name="time" Content="0" Canvas.Left="510" Canvas.Top="615" Height="25" Width="55"/>

            
            <!--boundaries for actual simulation-->
            <!--<Line X1="1534" Y1="0" X2="1534" Y2="600" Stroke="Black"/>
            <Line X1="0" Y1="600" X2="1534" Y2="600" Stroke="Black"/>-->
            
            <!--get rid of this if you uncomment the last 2 lines-->
            <Line X1="0" Y1="600" X2="1365" Y2="600" Stroke="Black"/>









            <!--calculator functionality
                    tickboxes to choose which variable to calculate
                    textboxes to input 3 other variables
                    calculate button, answer boxes-->
            <CheckBox x:Name="sTickBox" Content="s = " Canvas.Left="565" Canvas.Top="600" Checked="sTickBox_Checked" Height="20" Width="44"/>
            <CheckBox x:Name="uTickBox" Content="u = " Canvas.Left="565" Canvas.Top="623" Checked="uTickBox_Checked" Height="15" Width="46"/>
            <CheckBox x:Name="vTickBox" Content="v = " Canvas.Left="565" Canvas.Top="644" Checked="vTickBox_Checked" Height="19" Width="45"/>
            <CheckBox x:Name="aTickBox" Content="a = " Canvas.Left="565" Canvas.Top="665" Checked="aTickBox_Checked" Height="18" Width="45"/>
            <CheckBox x:Name="tTickBox" Content="t = " Canvas.Left="565" Canvas.Top="686" Checked="tTickBox_Checked" Height="18" Width="43"/>

            <TextBox x:Name="sTextBox" Height="18" Canvas.Left="609" TextWrapping="Wrap" Canvas.Top="599" Width="133" TextChanged="sTextBox_TextChanged"/>
            <TextBox x:Name="uTextBox" Height="18" Canvas.Left="609" TextWrapping="Wrap" Canvas.Top="620" Width="133" TextChanged="uTextBox_TextChanged"/>
            <TextBox x:Name="vTextBox" Height="17" Canvas.Left="609" TextWrapping="Wrap" Canvas.Top="642" Width="133" TextChanged="vTextBox_TextChanged"/>
            <TextBox x:Name="aTextBox" Height="18" Canvas.Left="609" TextWrapping="Wrap" Canvas.Top="663" Width="133" TextChanged="aTextBox_TextChanged"/>
            <TextBox x:Name="tTextBox" Height="18" Canvas.Left="609" TextWrapping="Wrap" Canvas.Top="684" Width="133" TextChanged="tTextBox_TextChanged"/>


            <Button x:Name="calculateButton" Content="Calculate" Width="95" Canvas.Left="747" Canvas.Top="600" Height="99" Click="calculateButton_Click"/>
            <Label x:Name="answer1" Content="Answer = " Canvas.Left="842" Canvas.Top="600" Height="43" Width="156" VerticalContentAlignment="Center"/>
            <Label x:Name="answer2" Content="Answer = " Canvas.Left="842" Canvas.Top="645" Height="43" Width="125" VerticalContentAlignment="Center"/>
            <Label x:Name="or" Content="OR" Canvas.Left="847" Canvas.Top="633"/>










            <!--displays zoom-->
            <Label x:Name="zoomLabel" Content="10" Canvas.Left="911" Canvas.Top="677" Height="29" Width="24" />
            <Label Content="Zoom    = " Canvas.Left="842" Canvas.Top="677" Width="64"/>
            <Label Content="Distance between lines = 5" Canvas.Left="1205" Canvas.Top="602" Width="160" FontWeight="Bold"/>
            
            
            
            
            
            <!--game functionality
                    checkbox to choose who is playing
                    displays points of each player
                    button to restart game (resets point to 0)
                    tells user distance from projectile start point to centre of target so they can hit it (by doing SUVAT calculations)-->
            <Label Content="GAME" Canvas.Left="1079" Canvas.Top="605" Width="70" HorizontalContentAlignment="Center" FontWeight="Bold" />
            <CheckBox x:Name="player1CheckBox" Content="Player 1" Canvas.Left="1009" Canvas.Top="625" Height="20" Width="70" Checked="player1CheckBox_Checked"/>
            <CheckBox x:Name="player2CheckBox" Content="Player 2" Canvas.Left="1079" Canvas.Top="625" Height="20" Width="70" Checked="player2CheckBox_Checked"/>
            <CheckBox x:Name="player3CheckBox" Content="Player 3" Canvas.Left="1149" Canvas.Top="625" Height="20" Width="70" Checked="player3CheckBox_Checked"/>
            <Label Content="Points" Canvas.Left="964" Canvas.Top="645" FontWeight="Bold"/>
            <Label x:Name="player1Points" Content="0" Canvas.Left="1029" Canvas.Top="645"/>
            <Label x:Name="player2Points" Content="0" Canvas.Left="1099" Canvas.Top="645"/>
            <Label x:Name="player3Points" Content="0" Canvas.Left="1169" Canvas.Top="645"/>
            <Button x:Name="resetGameButton" Content="Reset Game" Canvas.Left="964" Canvas.Top="682" Width="75" Click="resetGameButton_Click"/>
            <Label x:Name="targetDistanceLabel" Content="Distance from target = " Canvas.Left="1044" Canvas.Top="671" Width="175" Height="38"/>








        </Canvas>





        <!--creates revision canvas
            all lines are for either:
                splitting up different sections of canvas
                underlining extra formuale
                drawing graphs
            
            all labels are titles
        
            content is added to textblocks in MainWindow.xaml.cs
        
            -->
        <Canvas x:Name="revisionCanvas" Background="BlanchedAlmond" Visibility="Hidden" >

            <Label Content="EVERYTHING YOU NEED TO KNOW ABOUT PROJECTILE MOTION" FontWeight="UltraBold" FontSize="20" />

            <Line X1="0" Y1="30" X2="645" Y2="30" Stroke="Black" />
            <Line X1="645" Y1="0" X2="645" Y2="30" Stroke="Black" />




            <Label Content="THE ESSENTIALS:" Canvas.Top="30" Canvas.Left="182" FontWeight="Bold" Width="140" Height="28" Foreground="Red" />
            <TextBlock x:Name="mainFormulas" Text="*essential formulas here*" Canvas.Left="10" TextWrapping="Wrap" Canvas.Top="62" Height="264" Width="241" Foreground="Red"/>
            <TextBlock x:Name="conversions" Text="*conversions go here*" Canvas.Left="338" TextWrapping="Wrap" Canvas.Top="62" Height="264" Width="307" Foreground="Red"/>
            
            <Line X1="645" Y1="30" X2="645" Y2="703" Stroke="Black" />
            <Line X1="0" Y1="325" X2="645" Y2="325" Stroke="Black" />
            <Line X1="645" Y1="440" X2="1365" Y2="440" Stroke="Black" />

            <Label Content="KEY FACTS:" Canvas.Top="325" Canvas.Left="182" FontWeight="Bold" Width="140" Height="28" Foreground="Green" />
            <TextBlock x:Name="keyFacts" Text="*key facts here*" Canvas.Top="357" Canvas.Left="10" Height="346" Width="636" Foreground="Green" />


            <Label Content="EXTRA FORMULAE" Canvas.Top="12" Canvas.Left="650" Foreground="Blue" FontWeight="Black" />
            <TextBlock x:Name="extraFormulaeContext" Text="*extra formulae CONTEXT here*" Canvas.Left="651" TextWrapping="Wrap" Canvas.Top="35" Height="85" Width="299" Foreground="Blue"/>
            <TextBlock x:Name="extraFormulae" Text="*extra formulae here*" Canvas.Left="651" Canvas.Top="120" TextWrapping="Wrap" Height="320" Width="714" Foreground="Blue"/>









            <Line X1="735" Y1="154" X2="815" Y2="154" Stroke="Blue" StrokeThickness="1.5"/>
            <Line X1="650" Y1="203" X2="970" Y2="203" Stroke="Blue" StrokeThickness="1.5"/>
            <Line X1="650" Y1="282" X2="780" Y2="282" Stroke="Blue" StrokeThickness="1.5" />
            <Line X1="670" Y1="425" X2="905" Y2="425" Stroke="Blue" StrokeThickness="1.5" />

            <Line X1="950" Y1="0" X2="950" Y2="120" Stroke="Black"/>
            <Line X1="950" Y1="120" X2="1365" Y2="120" Stroke="Black" />




            <Label Content="WHY ARE THERE 2 SOLUTIONS FOR TIME IN EQUATIONS (4) AND (5)?" Canvas.Left="651" Canvas.Top="445" Height="31" Width="417" FontWeight="Bold" Foreground="Purple"/>
            <TextBlock x:Name="dualTimeExplanation" Text="*2 solutions of time explanation here*" Canvas.Left="651" TextWrapping="Wrap" Canvas.Top="481" Height="95" Width="429" Foreground="Purple"/>
            
            
            
            <!--everything below (except the textblock) is for drawing & labelling the graph in the bottom right corner-->
            <Ellipse Canvas.Left="1100" Canvas.Top="476" Width="210" Height="150" Stroke="Purple" />
            <Rectangle Canvas.Left="1100" Canvas.Top="551" Width="210" Height="77" Fill="BlanchedAlmond" />
            <Line X1="1100" Y1="550" X2="1340" Y2="550" Stroke="Purple" />
            <Line X1="1100" Y1="450" X2="1100" Y2="550" Stroke="Purple" />
            <Line X1="1100" Y1="500" X2="1340" Y2="500" Stroke="Purple" />
            <Line X1="1130" Y1="500" X2="1130" Y2="550" Stroke="Purple" />
            <Line X1="1280" Y1="500" X2="1280" Y2="550" Stroke="Purple" />
            <Label Content="s" Canvas.Left="1085" Canvas.Top="445" Foreground="Purple"/>
            <Label Content="40" Canvas.Left="1080" Canvas.Top="487" Foreground="Purple"/>
            <Label Content="t" Canvas.Left="1326" Canvas.Top="550" Foreground="Purple"/>
            <Label Content="t1" Canvas.Left="1120" Canvas.Top="550" Foreground="Purple"/>
            <Label Content="t2" Canvas.Left="1270" Canvas.Top="550" Foreground="Purple"/>
            <Label Content="s = 40" Canvas.Left="1320" Canvas.Top="490" Foreground="Purple" Height="25" Width="46"/>
            <Label Content="s = ut - 1/2at^2" Canvas.Left="1164" Canvas.Top="453" Foreground="Purple" Height="25" Width="96"/>
            <TextBlock x:Name="extraDualTimeExplanation" Text="*extra time explanation here (more space efficient to use 2 textboxes)*" Canvas.Left="651" Canvas.Top="585" Height="122" Width="568" TextWrapping="Wrap" Foreground="Purple"/>
            

        </Canvas>






        <!--creates calculator canvas
            calculator starts in simulation canvas so this canvas is almost completetly empty at the beginning-->
        <Canvas x:Name="calculatorCanvas" Background="Khaki" Visibility="Hidden">
            <!--extra information about calculator-->
            <Label Content="Calculator, tick the box you want to calculate, if there is a value in the box you have ticked, it will be ignored. Invalid inputs (numbers/symbols) will be voided. NaN means 'not a number'" Width="1000"/>



            <!--textblock that will contain any warnings displayed due to user error/impossible SUVAT scenarios-->
            <TextBlock x:Name="warningBlock" Text="Warning: None" Foreground="Red" Canvas.Left="10" Canvas.Top="178"/>
            
            <!--textblock that will contain all working out-->
            <TextBlock x:Name="workingOut" Text="Working Out:" Canvas.Top="250" Canvas.Left="10"/>



        </Canvas>


        
        
        <!--creates firing canvas (the canvas in the simulation page that bounds the projectile-->
        <Canvas x:Name="firingCanvas" Background="LightSkyBlue" Visibility="Visible" VerticalAlignment="Top" Height="600" HorizontalAlignment="Left" Width="1365" MouseWheel="firingCanvas_MouseWheel" MouseMove="firingCanvas_MouseMove" MouseRightButtonDown="firingCanvas_MouseRightButtonDown" >
            
            <!--adjusts and displays height of projectile's initial position-->
            <Slider x:Name="heightSlider" Minimum="0" Maximum="400" Value="0" SmallChange="1" IsSnapToTickEnabled="True" Orientation="Vertical" Canvas.Top="200" Width="20" Height="400" ValueChanged="heightSlider_ValueChanged"/>
            <Label x:Name="heightLabel" Content="Height = 0" Canvas.Top="170" Height="28" Width="111"/>
            
            <!--line that shows direction in which projectile will be fired, changes when user:
                    changes angle from horizontal when using polar velocity
                    changes X and Y vectors when using vector velocity
                    zooms in/out-->
            <Line x:Name="projectileDirection" X1="40" Y1="600" X2="140" Y2="500" Stroke="Black"/>

            
            <!--1 large red rectangle forms target base
                2 smaller rectangles split target into 5 sections-->
            <Rectangle x:Name="target1" Fill="Red" Canvas.Left="700" Canvas.Top="596" Height="4" Width="50"/>
            <Rectangle x:Name="target2" Fill="NavajoWhite" Canvas.Left="710" Canvas.Top="596" Height="4" Width="10"/>
            <Rectangle x:Name="target3" Fill="NavajoWhite" Canvas.Left="730" Canvas.Top="596" Height="4" Width="10" />

        </Canvas>
        
        
        <!-- don't think i need this but don't delete just in case
        
        <Grid VerticalAlignment="Top" Height="600" HorizontalAlignment="Left" Width="1365" ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="15"/>
            </Grid.ColumnDefinitions>
        </Grid> -->

        <!--2 buttons to switch between the 3 canvases-->
        <Button x:Name="changeCanvas1" Content="Revision" HorizontalAlignment="Left"  Margin="1220,630,0,0" VerticalAlignment="Top" Width="70" Height="72" Click="changeCanvas1_Click" FontWeight="Bold" />
        <Button x:Name="changeCanvas2" Content="Calc + W/O" HorizontalAlignment="Left" Margin="1295,630,0,0" VerticalAlignment="Top" Width="70" Height="72" Click="changeCanvas2_Click" FontWeight="Bold"/>
        
        <!--entire project must be bounded by these lines in order to fit on school computers-->
        <Line X1="0" Y1 ="704" X2="1365" Y2="704" Stroke="Black"/>
        <Line X1="1365" Y1="0" X2="1365" Y2="704" Stroke="Black"/>



    </Grid>

</Window>

